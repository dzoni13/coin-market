// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CurrencyDetailsButtons renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CurrencyDetailsButtons
    currency={
        Object {
            "availableSupply": null,
            "fiatCurrency": undefined,
            "id": "bitcoin",
            "lastUpdated": null,
            "marketCap": undefined,
            "name": "Bitcoin",
            "percentChange1h": null,
            "percentChange24h": null,
            "percentChange7d": null,
            "price": undefined,
            "priceBtc": null,
            "rank": "1",
            "symbol": "BTC",
            "totalSupply": null,
            "volume24h": undefined,
          }
    }
    getCurrencyDetails={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "bsClass": "btn-toolbar",
      "children": Array [
        <Link
          replace={false}
          to="/"
>
          <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="link"
                    className="link"
                    disabled={false}
          >
                     Back to list
          </Button>
</Link>,
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="default"
          className="refresh"
          disabled={false}
          onClick={[Function]}
>
           Refresh
</Button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="link"
            className="link"
            disabled={false}
>
             Back to list
</Button>,
          "replace": false,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": false,
            "block": false,
            "bsClass": "btn",
            "bsStyle": "link",
            "children": " Back to list",
            "className": "link",
            "disabled": false,
          },
          "ref": null,
          "rendered": " Back to list",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "active": false,
          "block": false,
          "bsClass": "btn",
          "bsStyle": "default",
          "children": " Refresh",
          "className": "refresh",
          "disabled": false,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": " Refresh",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bsClass": "btn-toolbar",
        "children": Array [
          <Link
            replace={false}
            to="/"
>
            <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="link"
                        className="link"
                        disabled={false}
            >
                         Back to list
            </Button>
</Link>,
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            className="refresh"
            disabled={false}
            onClick={[Function]}
>
             Refresh
</Button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="link"
              className="link"
              disabled={false}
>
               Back to list
</Button>,
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": false,
              "block": false,
              "bsClass": "btn",
              "bsStyle": "link",
              "children": " Back to list",
              "className": "link",
              "disabled": false,
            },
            "ref": null,
            "rendered": " Back to list",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": false,
            "block": false,
            "bsClass": "btn",
            "bsStyle": "default",
            "children": " Refresh",
            "className": "refresh",
            "disabled": false,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": " Refresh",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
